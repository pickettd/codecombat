extends /templates/base-flat

block content
  .container
    .row.m-y-3
      .col-xs-12
        if me.isTeacher()
          .alert.alert-danger.text-center
            // DNT: Temporary
            h3 ATTENTION TEACHERS:
            p We are transitioning to a new classroom management system; this page will soon be student-only.
            a(href="/teachers/classes") Go to teachers area.

        #main-content(dir="auto")
          if me.isAnonymous()

            h1.text-center(data-i18n="courses.welcome_to_courses")

            .text-center
              p
                h2(data-i18n="courses.ready_to_play")
              p
                button#start-new-game-btn.btn.btn-navy(data-i18n="courses.start_new_game")
              p
                span.spr -
                span.text-uppercase(data-i18n="general.or")
                span.spl -
              p
                button#log-in-btn.btn.btn-forest(data-i18n="login.log_in")

            h2#play-now-to-learn-header.text-center.text-uppercase(data-i18n="courses.play_now_learn_header")
            ul#benefits-ul
              li(data-i18n="courses.play_now_learn_1")
              li(data-i18n="courses.play_now_learn_2")
              li(data-i18n="courses.play_now_learn_3")
              li(data-i18n="courses.play_now_learn_4")

          else

            //if true
            if features.israel && new Date() >= new Date(2018, 0, 15, 8)
              .skillz-logo
                img(src="/images/pages/courses/skillz-logo-horizontal.png")
              if view.showFinalArena || view.awaitingFinalArena
                .text-center
                  h1#tournament-title
                    | Final Live Tournament
                  a#tournament-rules
                    if me.get('preferredLanguage') == 'he'
                      | חוקים וניקוד
                    else
                      | Tournament Rules and Scoring
                  #tournament-rules-content.hide.rtl-allowed
                    p Welcome to the Skillz CodeCombat final live tournament! Earn up to 100 points by taking the top spot in this epic new multiplayer arena.

                    p Scoring is as follows: your code will play constantly in the background against other players to determine how strong it is. The number of points you earn for a match are determined by a Bayesian calculation predicting how likely you were to win that match. So if you beat a player ranked more highly than you, you gain more points. Beat a player lower than you, gain fewer points. Lose to a weaker player, lose more points. Lose to a stronger player, lose fewer points. Your code will play on both the red and blue teams and use your highest score of the two. At the end of play, the semi-final matches will be played out live to determine the #1, #2, #3, and #4 players, with #5 and below being determined by order on the red team leaderboard. You can score at least 35 points by beating the blue Shaman CPU, and cannot win the overall tournament unless you do.

                    p You can test your code against any player and improve your strategy until you win, but remember: no points are scored until you submit your latest code and it starts to automatically plays matches against other players.

              else
                .text-center
                  h1#tournament-title
                    if me.get('preferredLanguage') == 'he'
                      | תחרות 
                    else
                      | Tournament Qualification
                  a#tournament-rules
                    if me.get('preferredLanguage') == 'he'
                      | חוקים וניקוד
                    else
                      | Tournament Rules and Scoring
                    if new Date() >= new Date(2018, 1, 6, 22) && new Date() < new Date(2018, 1, 8, 22)
                      p
                        if me.get('preferredLanguage') == 'he'
                          | תחרות בתי הספר הסתיימה. אתם מוזמנים להמשיך ולשחק. הרשומים לתחרות הקבוצות, מוזמנים להמשיך ולשחק ולצבור נקודות.
                        else
                          | The schools competition is over. You are welcome to continue and play. Those who registered to the teams competition are welcome to continue to play and gain more points.
                    else if new Date() >= new Date(2018, 1, 8, 22)
                      p
                        if me.get('preferredLanguage') == 'he'
                          | תחרות בתי הספר הסתיימה. אתם מוזמנים להמשיך ולשחק.
                        else
                          | The competition is over. You are welcome to continue and play.
                  #tournament-rules-content.hide.rtl-allowed
                    if me.get('preferredLanguage') == 'he'
                      p(dir="rtl") ברוכים הבאים לתחרות CodeCombat של אליפות הסייבר Skillz! עליכם להשלים לפחות עשרה שלבים בקורס ״מבוא למדעי המחשב 3״ או קורסים מתקדמים יותר על מנת לזכות ב-10 נקודות לתחרות. לאחר מכן, אתם יכולים להרויח עוד 90 נקודות (לכל היותר) על פני שלוש זירות מרובות שחקנים על מנת לצבור מקסימום של 100 נקודות בתחרות. אתם יכולים לזכות ב-עד 40 נקודות בכל זירה מרובת שחקנים, על ידי כתיבת קוד בעל אסטרטגיה טובה יותר, תוך כדי הבסת שחקנים אחרים וטיפוס מעלה בלוח השחקנים המובילים. אתם רוצים להגדיל את מספר הנקודות שלכם? שחקו יותר שלבי משחק CodeCombat על מנת ללמוד טקטיקות תכנות/קידוד מתקדמות יותר, כך שכאשר תחזרו לזירה, תוכלו ליישם את מה שלמדתם במהלך השלבים, בשדה הקרב.

                      p(dir="rtl") בכל זירה, הניקוד מתבצע כדלקמן: הקוד שכתבתם יורץ (ישוחק) כל הזמן ברקע נגד שחקנים אחרים על מנת לקבוע כמה הוא חזק. מספר הנקודות שאתם צוברים בכל עימות נקבע על ידי כללי הסקה בייסיאנית המנבאים מה היה הסיכוי שלך לנצח בעימות. כאשר אתם מביסים שחקן המדורג במקום גבוהה מכם בדירוג, אתם זוכים ביותר נקודות. כאשר אתם מביסים שחקן המדורג במקום נמוך מכם בדירוג, אתם זוכים בפחות נקודות. מפסידים לשחקן חלש מכם, מפסידים יותר נקודות. מפסידים לשחקן חזק מכם, מפסידים פחות נקודות. תשתדלו להשיג יותר מ-40 נקודות בכל שלושת הזירות, ואז בחרו את הזירה האהובה עליכם ביותר, ותנסו להגיע למקום הראשון בארץ בזירה זו. הקוד שלכם ישוחק גם על הנבחרת האדומה וגם על הנבחרת הכחולה והציון הגבוהה מבין השניים ילקח בחשבון.

                      p(dir="rtl") אתם יכולים לנסות את הקוד שלכם כנגד כל שחקן אחר ולשפר את האסטרטגיה שלכם עד שאתם מנצחים, אבל חשוב לזכור: לא מתבצעת צבירה של נקודות עד שאתם  שולחים את הקוד האחרון שלכם והוא מתחיל לשחק באופן אוטומטי כנגד שחקנים אחרים. 
                    else
                      p Welcome to the Skillz CodeCombat tournament! Complete at least 10 levels in the Computer Science 3 or later courses to earn 10 tournament points. Then, earn another 90 points across the three multiplayer arenas for a maximum score of 100 tournament points. You may earn up to 40 points in each multiplayer arena by writing better strategy code, defeating other players, and climbing your way up the leaderboards. Want to improve your score? Play more CodeCombat levels to learn advanced coding tactics, then come back to your arena to use what you have learned on the battlefield.
  
                      p In each arena, scoring is as follows: your code will play constantly in the background against other players to determine how strong it is. The number of points you earn for a match are determined by a Bayesian calculation predicting how likely you were to win that match. So if you beat a player ranked more highly than you, you gain more points. Beat a player lower than you, gain fewer points. Lose to a weaker player, lose more points. Lose to a stronger player, lose fewer points. Try to get above 40 points on all three arenas, then pick your favorite and vie for the #1 rank in the country. Your code will play on both the red and blue teams and use your highest score of the two.

                      p You can test your code against any player and improve your strategy until you win, but remember: no points are scored until you submit your latest code and it starts to automatically plays matches against other players.

              if view.awaitingFinalArena
                .text-center
                  h2 Waiting for Tournament Start
                  p The final arena will appear when the tournament begins.
                  br
                  br
              else
                for level in view.tournamentArenas()
                  a(href=level.disabled ? "/play/ladder" : "/play/ladder/#{level.id}", disabled=level.disabled, title=level.description)
                    .level
                      if level.image
                        img.level-image(src="#{level.image}", alt="#{level.name}").img-rounded
                      else
                        img.level-image(src="/images/pages/play/ladder/multiplayer_notext.jpg", alt="#{level.name}").img-rounded
                        h3.dynamic-level-name= level.name + (level.disabled ? " (Coming soon!)" : "")
                      .overlay-text.level-difficulty.rtl-allowed
                        if me.get('preferredLanguage') != "he"
                          span(data-i18n="play.level_difficulty") Difficulty: 
                          each i in Array(level.difficulty)
                            | ★
                        if view.levelPlayCountMap
                          - var playCount = view.levelPlayCountMap[level.id]
                          if playCount
                            if me.get('preferredLanguage') != "he"
                              span.spl.spr - 
                            span.spl.spr #{playCount.sessions}
                            span(data-i18n="play.players") players
                      .play-text-container
                        .overlay-text.play-text(data-i18n="common.play") Play

            .text-center
              h1(data-i18n="courses.welcome_to_page")

            .current-hero-container.text-center.row
              .hero-avatar
                img(src=view.hero.getPortraitURL())
              .current-hero-right-col.rtl-allowed
                .semibold.current-hero-text
                  if view.hero.getGender() == 'female'
                    span.spr(data-i18n="courses.current_hero_female")
                  else
                    span.spr(data-i18n="courses.current_hero")
                  span.current-hero-name= view.hero.getHeroShortName()
                button.change-hero-btn.btn.btn-lg.btn-forest
                  span(data-i18n="play.change_hero")

            if view.classrooms.size()
              br
              h3(data-i18n="courses.my_classes")

              for classroom in view.classrooms.models
                hr.class-break
                - var justAdded = classroom.id === view.classroomJustAdded;
                - var classroomClass = justAdded ? 'just-added' : '';
                if justAdded
                  #just-added-text.text-center(data-i18n="courses.class_added")

                //- sigh
                div(class=classroomClass).rtl-allowed
                  h5(dir="auto")
                    span.spr= classroom.get('name')
                    span.spr (#{(classroom.get('aceConfig') || {}).language === 'javascript' ? 'JavaScript' : 'Python'})
                  if !features.israel
                    p
                      span(data-i18n="courses.teacher")
                      span :
                      if view.ownerNameMap && view.ownerNameMap[classroom.get('ownerID')]
                        span.spl= view.ownerNameMap[classroom.get('ownerID')]

                  - var courseInstances = view.courseInstances.where({classroomID: classroom.id});
                  for courseInstance in courseInstances
                    - var courseID = courseInstance.get('courseID');
                    // Never show WD2
                    if (features.israel && courseID == '5789587aad86a6efb5737020')
                      - continue;
                    // Only show CS1, GD1, WD1 during pre-training phase, and add CS2, GD2 during training phase
                    if (features.israel && !(courseID == '560f1a9f22961295f9427742' || courseID == '5789587aad86a6efb573701e' || courseID == '5789587aad86a6efb573701f' || courseID == '5632661322961295f9428638' || courseID == '57b621e7ad86a6efb5737e64') && new Date() < new Date(2018, 0, 15, 8))
                      - continue;
                    .course-instance-entry.rtl-allowed
                      - var course = view.courses.get(courseInstance.get('courseID'));
                      h6
                        span.spr= i18n(course.attributes, 'name')
                        small
                          a.view-levels-btn(data-course-id=courseInstance.get('courseID'), data-courseinstance-id=courseInstance.id, data-i18n="courses.view_levels")
                          if view.courseInstanceHasProject(courseInstance)
                            a.view-project-gallery-link(data-course-id=courseInstance.get('courseID'), data-courseinstance-id=courseInstance.id, data-i18n="courses.view_project_gallery")
                          if classroom.hasAssessments({courseId: course.id})
                            =" "
                            a.view-challenges-link(data-classroom-id=classroom.id, data-i18n="courses.view_challenges", data-course-id=course.id)
                      +course-instance-body(courseInstance, classroom)
                      .clearfix

            h3.text-uppercase(data-i18n="courses.join_class")
            hr

            form#join-class-form.form-inline
              .help-block
                em(data-i18n="courses.ask_teacher_for_code")
              .form-group
                input#class-code-input.form-control(data-i18n="[placeholder]courses.enter_c_code", placeholder="<Enter Class Code>", value=view.classCode)
              input#join-class-button.btn.btn-navy(type="submit", data-i18n="[value]courses.join", value="Join")

              if view.state === 'enrolling'
                .progress.progress-striped.active
                  .progress-bar(style="width: 100%", data-i18n="courses.joining") Joining class

              if view.errorMessage
                .alert.alert-danger= view.errorMessage


mixin course-instance-body(courseInstance, classroom)
  - var course = view.courses.get(courseInstance.get('courseID'));
  - var stats = classroom.statsForSessions(courseInstance.sessions, course.id);
  if stats.levels.done
    .text-success
      span.glyphicon.glyphicon-ok
      span.spl(data-i18n="courses.course_complete")
      span !
  .pull-right
    if stats.levels.done
      - var arenaLevel = stats.levels.arena;
      - var projectLevel = stats.levels.project;
      if arenaLevel
        - var url = view.urls.courseArenaLadder({level: view.originalLevelMap[arenaLevel.get('original')] || arenaLevel, courseInstance: courseInstance});
        a.play-btn.btn.btn-forest-alt.btn-lg.m-b-1(data-href=url, data-level-slug=arenaLevel.get('slug'), data-event-action="Students Play Arena")
          span(data-i18n="courses.play_arena")
      else if projectLevel
        - var url = view.urls.courseLevel({level: view.originalLevelMap[projectLevel.get('original')] || projectLevel, courseInstance: courseInstance});
        a.play-btn.btn.btn-forest-alt.btn-lg.m-b-1(data-href=url, data-level-slug=projectLevel.get('slug'), data-event-action="Students Play Project")
          span(data-i18n="courses.view_project")
      else
        a.btn.btn-default.btn-lg.m-b-1(disabled=true, data-i18n="courses.course_complete")
    else
      - var next = stats.levels.next;
      - var url = view.urls.courseWorldMap({course: course, courseInstance: courseInstance});
      if stats.levels.next != stats.levels.first
        a.play-btn.btn.btn-forest.btn-lg.m-b-1(data-href=url, data-level-slug=next.get('slug'), data-event-action="Students Continue Course")
          span(data-i18n="common.continue")
      else
        a.play-btn.btn.btn-navy.btn-lg.m-b-1(data-href=url, data-level-slug=next.get('slug'), data-event-action="Students Start Course")
          span(data-i18n="courses.start")

  if stats.levels.lastPlayed
    div
      span(data-i18n="courses.last_level")
      span :
      if stats.levels.lastPlayedNumber
        span.spl #{stats.levels.lastPlayedNumber}.
      - var levelNameEnglish = stats.levels.lastPlayed.get('name');
      - var levelWithI18N = view.originalLevelMap[stats.levels.lastPlayed.get('original')];
      - var levelName = levelWithI18N ? i18n(levelWithI18N.attributes, 'name') : levelNameEnglish;
      span.spl= levelName || levelNameEnglish

  .clearfix
  .progress
    .progress-bar(style="width:"+stats.levels.pctDone)= stats.levels.pctDone
